version: '3'

services:

  redis:
    image: redis
    container_name: redis
    ports: [ "6379:6379" ]

  postgres:
    image: postgres:14.2-alpine
    container_name: postgres
    ports: [ "5432:5432" ]
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  ngrok:
    image: wernight/ngrok
    container_name: ngrok
    ports: [ "4040:4040" ]
    command: ngrok http --authtoken $NGROK_AUTHTOKEN app:8080

  localstack:
    image: localstack/localstack:1.0.4
    container_name: localstack
    environment:
      - DEFAULT_REGION=us-west-1
      - LAMBDA_REMOTE_DOCKER=false
      - LAMBDA_EXECUTOR=local # runs lambda inside temp directory instead of new docker container
      - SQS_ENDPOINT_STRATEGY=off # sets the SQS queue domain/path to the legacy version
#      - DEBUG=1 # Uncomment to debug
    ports:
      - "4566:4566"
    volumes:
      - ./.localstack:/docker-entrypoint-initaws.d

  cryptor:
    build: etc/cryptor-mock
    container_name: cryptor
    environment:
      CRYPTOR_SIDECAR_CLIENT_IDENTIFICATION_CHALLENGE: "random-string" #has to match the one in env.test
    ports:
      - "26272:26272"

  app:
    depends_on:
      - redis
      - postgres
      - localstack
      - cryptor
    volumes:
      - .:/app
    build:
      context: .
    ports:
      - "8080:8080" # main port
      - "9229:9229" # main debug port
      - "8081:8081" # worker port
      - "9230:9230" # worker debug port
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/jira-dev
      SQS_BACKFILL_QUEUE_URL: http://localstack:4566/000000000000/backfill
      SQS_PUSH_QUEUE_URL: http://localstack:4566/000000000000/push
      SQS_DEPLOYMENT_QUEUE_URL: http://localstack:4566/000000000000/deployment
      SQS_BRANCH_QUEUE_URL: http://localstack:4566/000000000000/branch
      SQS_DEPLOYMENT_GATING_POLLER_URL: http://localstack:4566/000000000000/deployment-gating-poller
      SQS_TEST_QUEUE_URL: http://localstack:4566/000000000000/test-sqs-client
      REDISX_CACHE_HOST: redis
